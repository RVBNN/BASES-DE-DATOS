mysql> -- PROCEDIMIENTOS ALMACENADOS
mysql> 
mysql> prompt \d mysql>
PROMPT set to '\d mysql>'
(none) mysql>
(none) mysql>select 'Los procedimientos almacenados son un bloque de instrucciones que se van a ejecutar en un futuro.' as 'DEFINICION';
+---------------------------------------------------------------------------------------------------+
| DEFINICION                                                                                        |
+---------------------------------------------------------------------------------------------------+
| Los procedimientos almacenados son un bloque de instrucciones que se van a ejecutar en un futuro. |
+---------------------------------------------------------------------------------------------------+
1 row in set (0.00 sec)

(none) mysql>
(none) mysql>select 'Los procedimientos no devuelven un valor siempre.' as 'CARACTERISTICA';
+---------------------------------------------------+
| CARACTERISTICA                                    |
+---------------------------------------------------+
| Los procedimientos no devuelven un valor siempre. |
+---------------------------------------------------+
1 row in set (0.00 sec)

(none) mysql>
(none) mysql>select 'Se les invoca o llama por medio de --> CALL nombreProcedimiento([param]) <--  y suelen ser utilizados para tareas cotidianas.' as 'USO';
+-------------------------------------------------------------------------------------------------------------------------------+
| USO                                                                                                                           |
+-------------------------------------------------------------------------------------------------------------------------------+
| Se les invoca o llama por medio de --> CALL nombreProcedimiento([param]) <--  y suelen ser utilizados para tareas cotidianas. |
+-------------------------------------------------------------------------------------------------------------------------------+
1 row in set (0.00 sec)

(none) mysql>
(none) mysql>select 'Para poder crear un procedimiento almacenado y que MYSQL no ejecute la consulta en automatico, es necesario cambiar el delimitador o enter de MYSQL, ";"' as 'DELIMITADOR';
+----------------------------------------------------------------------------------------------------------------------------------------------------------+
| DELIMITADOR                                                                                                                                              |
+----------------------------------------------------------------------------------------------------------------------------------------------------------+
| Para poder crear un procedimiento almacenado y que MYSQL no ejecute la consulta en automatico, es necesario cambiar el delimitador o enter de MYSQL, ";" |
+----------------------------------------------------------------------------------------------------------------------------------------------------------+
1 row in set (0.00 sec)

(none) mysql>
(none) mysql>select 'Para cambiar el delimitador solo hay que escribir "DELIMITER [espacio] [CADENA NUEVA]' as 'CAMBIAR DELIMITADOR';
+---------------------------------------------------------------------------------------+
| CAMBIAR DELIMITADOR                                                                   |
+---------------------------------------------------------------------------------------+
| Para cambiar el delimitador solo hay que escribir "DELIMITER [espacio] [CADENA NUEVA] |
+---------------------------------------------------------------------------------------+
1 row in set (0.00 sec)

(none) mysql>
(none) mysql>select 'Siempre regresar el delimitador a ";" para no tener problemas con consultas futuras --> DELIMITER ; <--' as 'NOTA IMPORTANTE';
+---------------------------------------------------------------------------------------------------------+
| NOTA IMPORTANTE                                                                                         |
+---------------------------------------------------------------------------------------------------------+
| Siempre regresar el delimitador a ";" para no tener problemas con consultas futuras --> DELIMITER ; <-- |
+---------------------------------------------------------------------------------------------------------+
1 row in set (0.00 sec)

(none) mysql>
(none) mysql>select 'DELIMITER $$ CREATE PROCEDURE nombreProcedimiento(param) BEGIN [INSTRUCCIONES] END $$ DELIMITER ;' as 'ESTRUCTURA CONSULTA';
+---------------------------------------------------------------------------------------------------+
| ESTRUCTURA CONSULTA                                                                               |
+---------------------------------------------------------------------------------------------------+
| DELIMITER $$ CREATE PROCEDURE nombreProcedimiento(param) BEGIN [INSTRUCCIONES] END $$ DELIMITER ; |
+---------------------------------------------------------------------------------------------------+
1 row in set (0.00 sec)

(none) mysql>
(none) mysql>select 'Los procedimientos pueden o no recibir parametros. Si reciben pueden ser de tres tipos: IN, OUT, INOUT; dependiendo del objetivo a realizar.' as 'TIPOS PARAMETROS';
+----------------------------------------------------------------------------------------------------------------------------------------------+
| TIPOS PARAMETROS                                                                                                                             |
+----------------------------------------------------------------------------------------------------------------------------------------------+
| Los procedimientos pueden o no recibir parametros. Si reciben pueden ser de tres tipos: IN, OUT, INOUT; dependiendo del objetivo a realizar. |
+----------------------------------------------------------------------------------------------------------------------------------------------+
1 row in set (0.00 sec)

(none) mysql>
(none) mysql>select 'Un parámetro IN pasa un valor a un procedimiento.' as 'PARÁMETRO IN'
    -> UNION 
    -> select 'El procedimiento puede modificar el valor, pero la modificación no es visible para el usuario cuando el procedimiento termina.' as 'PARÁMETRO IN';
+---------------------------------------------------------------------------------------------------------------------------------+
| PARÁMETRO IN                                                                                                                    |
+---------------------------------------------------------------------------------------------------------------------------------+
| Un parámetro IN pasa un valor a un procedimiento.                                                                               |
| El procedimiento puede modificar el valor, pero la modificación no es visible para el usuario cuando el procedimiento termina.  |
+---------------------------------------------------------------------------------------------------------------------------------+
2 rows in set (0.00 sec)

(none) mysql>
(none) mysql>select 'Un parámetro OUT devuelve un valor del procedimiento a la persona que llama.' as 'PARÁMETRO OUT' 
    -> UNION 
    -> select 'Su valor inicial es NULL dentro del procedimiento y su valor es visible para el usuario cuando el procedimiento termina.' as 'PARÁMETRO OUT';
+--------------------------------------------------------------------------------------------------------------------------+
| PARÁMETRO OUT                                                                                                            |
+--------------------------------------------------------------------------------------------------------------------------+
| Un parámetro OUT devuelve un valor del procedimiento a la persona que llama.                                             |
| Su valor inicial es NULL dentro del procedimiento y su valor es visible para el usuario cuando el procedimiento termina. |
+--------------------------------------------------------------------------------------------------------------------------+
2 rows in set (0.00 sec)

(none) mysql>
(none) mysql>select 'Un parámetro INOUT debe ser inicializado por el usuario.' as 'PARÁMETRO INOUT'
    -> UNION 
    -> select 'Luego, el procedimiento puede modificarlo y cualquier cambio realizado por el procedimiento es visible para el usuario cuando el procedimiento termina y se llama a la variable.' as 'PARÁMETRO INOUT';
+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| PARÁMETRO INOUT                                                                                                                                                                  |
+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| Un parámetro INOUT debe ser inicializado por el usuario.                                                                                                                         |
| Luego, el procedimiento puede modificarlo y cualquier cambio realizado por el procedimiento es visible para el usuario cuando el procedimiento termina y se llama a la variable. |
+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
2 rows in set (0.00 sec)

(none) mysql>
(none) mysql>-- EJERICIOS
(none) mysql>
(none) mysql>drop database if exists ej_proc;
Query OK, 2 rows affected (0.08 sec)

(none) mysql>create database ej_proc;
Query OK, 1 row affected (0.01 sec)

(none) mysql>use ej_proc
Database changed
ej_proc mysql>create table ej_proc (
    -> id int unsigned not null auto_increment primary key,
    -> ejercicio varchar(500),
    -> consulta varchar(1000)
    -> );
Query OK, 0 rows affected (0.06 sec)

ej_proc mysql>
ej_proc mysql>insert into ej_proc (ejercicio,consulta) values
    -> ('Crear un proc en la base MUNDO para imprimir los primeros N registros de la tabla paises.','DELIMITER $$
    '> CREATE PROCEDURE N_REGISTROS(IN n INT)
    '> BEGIN
    '> SELECT * FROM PAISES LIMIT n;
    '> END $$ 
    '> DELIMITER ;
    '> '),
    -> ('Crear un proc en la base MUNDO para guardar en una variable el max de poblacion de la tabla paises.','DELIMITER $$
    '> CREATE PROCEDURE max_pob(OUT max_pob int)
    '> BEGIN
    '> SELECT max(poblacion) INTO max_pob FROM paises;
    '> END $$
    '> DELIMITER ;'),
    -> ('Crear un proc para incrementar valores.','DELIMITER $$
    '> CREATE PROCEDURE inc_valor(INOUT contador INT,IN aum INT)
    '> BEGIN
    '> SET contador = contador + aum;
    '> END $$
    '> DELIMITER ;
    '> '),
    -> ('Crear un proc en la base MUNDO para saber si un pais es grande o no; (GRANDE si tiene mas de 100 M de habitantes',"DELIMITER $$
    "> CREATE PROCEDURE pais_g(IN n VARCHAR(50))
    "> BEGIN
    "> DECLARE pob INT;
    "> SELECT poblacion into pob from paises where pais = n;
    "> IF pob > 100000000 THEN SELECT concat(n,' es GRANDE') as RESPUESTA;
    "> ELSE SELECT concat(n,' es PEQUE');
    "> END IF;
    "> END $$
    "> DELIMITER ;"),
    -> ('Crear un proc en la base MUNDO que nos devuelva el costo por envio dado un pais que ingresemos.',"DELIMITER $$
    "> CREATE PROCEDURE envio(IN n VARCHAR(50),OUT e VARCHAR(50))
    "> BEGIN
    "> CASE
    "> WHEN n = 'Mexico' THEN SET e = 'Gratis';
    "> WHEN n = 'EEUU' THEN SET e = '$200.00 MXN';
    "> ELSE SET e = 'No lo puedes pagar';
    "> END CASE;
    "> END $$
    "> DELIMITER ;"),
    -> ('Crear un proc que imprima los numeros pares hasta el indicado por el usuario.',"DELIMITER $$
    "> CREATE PROCEDURE pares_hasta(IN n INT)
    "> BEGIN
    "> DECLARE res VARCHAR(500);
    "> DECLARE contador INT;
    "> SET res = '';
    "> SET contador = 1;
    "> nombre_loop: LOOP
    "> IF contador >= n THEN LEAVE nombre_loop;
    "> END IF;
    "> SET contador = contador + 1;
    "> IF (contador mod 2) THEN ITERATE nombre_loop;
    "> ELSE SET res = concat(res,contador,',');
    "> END IF;
    "> END LOOP;
    "> SELECT res as RESULTADO;
    "> END $$
    "> DELIMITER ;"),
    -> ('Crear un procedimiento que inserte n numeros en la tabla prueba.','CREATE TABLE prueba(id INT);
    '> DROP PROCEDURE IF EXISTS llena_hasta;
    '> DELIMITER $$
    '> CREATE PROCEDURE llena_hasta(IN n INT)
    '> BEGIN
    '> DECLARE contador INT;
    '> SET contador = 1;
    '> REPEAT
    '> INSERT INTO prueba VALUES(contador);
    '> SET contador = contador + 1;
    '> UNTIL contador > n
    '> END REPEAT;
    '> END $$
    '> DELIMITER ;')
    -> ;
Query OK, 7 rows affected (0.01 sec)
Records: 7  Duplicates: 0  Warnings: 0

ej_proc mysql>
ej_proc mysql>
ej_proc mysql>
ej_proc mysql>-- Ejercicio 01
ej_proc mysql>select * from ej_proc where id = 1;
+----+-------------------------------------------------------------------------------------------+--------------------------------------------------------------------------------------------------------------+
| id | ejercicio                                                                                 | consulta                                                                                                     |
+----+-------------------------------------------------------------------------------------------+--------------------------------------------------------------------------------------------------------------+
|  1 | Crear un proc en la base MUNDO para imprimir los primeros N registros de la tabla paises. | DELIMITER $$
CREATE PROCEDURE N_REGISTROS(IN n INT)
BEGIN
SELECT * FROM PAISES LIMIT n;
END $$ 
DELIMITER ;
 |
+----+-------------------------------------------------------------------------------------------+--------------------------------------------------------------------------------------------------------------+
1 row in set (0.00 sec)

ej_proc mysql>
ej_proc mysql>use mundo
Database changed
mundo mysql>drop procedure if exists n_registros;
Query OK, 0 rows affected (0.01 sec)

mundo mysql>delimiter $$
mundo mysql>create procedure n_registros(in n int)
    -> begin
    -> select * from paises limit n;
    -> end $$ 
Query OK, 0 rows affected (0.01 sec)

mundo mysql>delimiter ;
mundo mysql>
mundo mysql>select 'Mandamos llamar a nuestro proceso --> CALL N_REGISTROS(2); <--' as 'CONSULTA';
+----------------------------------------------------------------+
| CONSULTA                                                       |
+----------------------------------------------------------------+
| Mandamos llamar a nuestro proceso --> CALL N_REGISTROS(2); <-- |
+----------------------------------------------------------------+
1 row in set (0.00 sec)

mundo mysql>call  N_REGISTROS(2);
+---------+-------------+------------+--------+-----------+-------------+---------+
| id_pais | pais        | continente | area   | poblacion | gdp         | capital |
+---------+-------------+------------+--------+-----------+-------------+---------+
|       1 | Afghanistan | Asia       | 652230 |  25500100 | 20364000000 | Kabul   |
|       2 | Albania     | Europe     |  28748 |   2821977 | 12044000000 | Tirana  |
+---------+-------------+------------+--------+-----------+-------------+---------+
2 rows in set (0.00 sec)

Query OK, 0 rows affected (0.01 sec)

mundo mysql>
mundo mysql>select 'Mandamos llamar a nuestro proceso --> CALL N_REGISTROS(10); <--' as 'CONSULTA';
+-----------------------------------------------------------------+
| CONSULTA                                                        |
+-----------------------------------------------------------------+
| Mandamos llamar a nuestro proceso --> CALL N_REGISTROS(10); <-- |
+-----------------------------------------------------------------+
1 row in set (0.00 sec)

mundo mysql>call  N_REGISTROS(10);
+---------+---------------------+---------------+---------+-----------+---------------+------------------+
| id_pais | pais                | continente    | area    | poblacion | gdp           | capital          |
+---------+---------------------+---------------+---------+-----------+---------------+------------------+
|       1 | Afghanistan         | Asia          |  652230 |  25500100 |   20364000000 | Kabul            |
|       2 | Albania             | Europe        |   28748 |   2821977 |   12044000000 | Tirana           |
|       3 | Algeria             | Africa        | 2381741 |  38700000 |  207021000000 | Algiers          |
|       4 | Andorra             | Europe        |     468 |     76098 |    3222000000 | Andorra la Vella |
|       5 | Angola              | Africa        | 1246700 |  19183590 |  116308000000 | Luanda           |
|       6 | Antigua and Barbuda | Caribbean     |     442 |     86295 |    1176000000 | St. John's       |
|       7 | Argentina           | South America | 2780400 |  42669500 |  477028000000 | Buenos Aires     |
|       8 | Armenia             | Eurasia       |   29743 |   3017400 |    9950000000 | Yerevan          |
|       9 | Australia           | Oceania       | 7692024 |  23545500 | 1564419000000 | Canberra         |
|      10 | Austria             | Europe        |   83871 |   8504850 |  394458000000 | Vienna           |
+---------+---------------------+---------------+---------+-----------+---------------+------------------+
10 rows in set (0.00 sec)

Query OK, 0 rows affected (0.04 sec)

mundo mysql>
mundo mysql>-- Ejercicio 02
mundo mysql>use ej_proc
Database changed
ej_proc mysql>select * from ej_proc where id = 2;
+----+-----------------------------------------------------------------------------------------------------+---------------------------------------------------------------------------------------------------------------------------------+
| id | ejercicio                                                                                           | consulta                                                                                                                        |
+----+-----------------------------------------------------------------------------------------------------+---------------------------------------------------------------------------------------------------------------------------------+
|  2 | Crear un proc en la base MUNDO para guardar en una variable el max de poblacion de la tabla paises. | DELIMITER $$
CREATE PROCEDURE max_pob(OUT max_pob int)
BEGIN
SELECT max(poblacion) INTO max_pob FROM paises;
END $$
DELIMITER ; |
+----+-----------------------------------------------------------------------------------------------------+---------------------------------------------------------------------------------------------------------------------------------+
1 row in set (0.00 sec)

ej_proc mysql>use mundo
Database changed
mundo mysql>drop procedure if exists max_pob;
Query OK, 0 rows affected (0.03 sec)

mundo mysql>delimiter $$
mundo mysql>create procedure max_pob(out max_pob int)
    -> begin
    -> select max(poblacion) into max_pob from paises;
    -> end $$
Query OK, 0 rows affected (0.05 sec)

mundo mysql>delimiter ;
mundo mysql>
mundo mysql>select 'Madamos llamar a nuestro proceso --> CALL max_pob(@max_pob); <--' as CONSULTA;
+------------------------------------------------------------------+
| CONSULTA                                                         |
+------------------------------------------------------------------+
| Madamos llamar a nuestro proceso --> CALL max_pob(@max_pob); <-- |
+------------------------------------------------------------------+
1 row in set (0.00 sec)

mundo mysql>call max_pob(@max_pob);
Query OK, 1 row affected (0.00 sec)

mundo mysql>select 'Imprimimos el valor de @max_pob --> SELECT @max_pob; <--' as CONSULTA;
+----------------------------------------------------------+
| CONSULTA                                                 |
+----------------------------------------------------------+
| Imprimimos el valor de @max_pob --> SELECT @max_pob; <-- |
+----------------------------------------------------------+
1 row in set (0.00 sec)

mundo mysql>select @max_pob;
+------------+
| @max_pob   |
+------------+
| 1365370000 |
+------------+
1 row in set (0.00 sec)

mundo mysql>select 'Validamos el proceso --> SELECT max(poblacion) FROM paises; <--' as CONSULTA;
+-----------------------------------------------------------------+
| CONSULTA                                                        |
+-----------------------------------------------------------------+
| Validamos el proceso --> SELECT max(poblacion) FROM paises; <-- |
+-----------------------------------------------------------------+
1 row in set (0.00 sec)

mundo mysql>select max(poblacion) from paises;
+----------------+
| max(poblacion) |
+----------------+
|     1365370000 |
+----------------+
1 row in set (0.00 sec)

mundo mysql>
mundo mysql>
mundo mysql>
mundo mysql>-- Ejercicio 03
mundo mysql>use ej_proc
Database changed
ej_proc mysql>select * from ej_proc where id = 3;
+----+-----------------------------------------+---------------------------------------------------------------------------------------------------------------------------------+
| id | ejercicio                               | consulta                                                                                                                        |
+----+-----------------------------------------+---------------------------------------------------------------------------------------------------------------------------------+
|  3 | Crear un proc para incrementar valores. | DELIMITER $$
CREATE PROCEDURE inc_valor(INOUT contador INT,IN aum INT)
BEGIN
SET contador = contador + aum;
END $$
DELIMITER ;
 |
+----+-----------------------------------------+---------------------------------------------------------------------------------------------------------------------------------+
1 row in set (0.00 sec)

ej_proc mysql>drop procedure if exists inc_valor;
Query OK, 0 rows affected, 1 warning (0.01 sec)

ej_proc mysql>delimiter $$
ej_proc mysql>create procedure inc_valor(inout contador int,in aum int)
    -> begin
    -> set contador = contador + aum;
    -> end $$
Query OK, 0 rows affected (0.02 sec)

ej_proc mysql>delimiter ;
ej_proc mysql>
ej_proc mysql>set @A = null;
Query OK, 0 rows affected (0.00 sec)

ej_proc mysql>
ej_proc mysql>select 'Llamamos al procedimiento --> CALL inc_valor(@A,1); <-- e imprimimos valor de @A --> SELECT @A;<--' as CONSULTA;
+----------------------------------------------------------------------------------------------------+
| CONSULTA                                                                                           |
+----------------------------------------------------------------------------------------------------+
| Llamamos al procedimiento --> CALL inc_valor(@A,1); <-- e imprimimos valor de @A --> SELECT @A;<-- |
+----------------------------------------------------------------------------------------------------+
1 row in set (0.00 sec)

ej_proc mysql>call inc_valor(@A,1);
Query OK, 0 rows affected (0.00 sec)

ej_proc mysql>select @A;
+------+
| @A   |
+------+
| NULL |
+------+
1 row in set (0.00 sec)

ej_proc mysql>
ej_proc mysql>select 'Como @A no tiene valor, debemos primero asignar uno para despues poder incrementar su valor.
    '> --> SET @A = 0; 
    '> CALL inc_valor(@A,1); -- @A ahora vale 0+1 = 1
    '> CALL inc_valor(@A,4); -- @A ahora vale 1+4 = 5
    '> CALL inc_valor(@A,9); -- @A ahora vale 5+9 = 14
    '> SELECT @A; <--' as CONSULTA;
+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| CONSULTA                                                                                                                                                                                                                                                                   |
+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| Como @A no tiene valor, debemos primero asignar uno para despues poder incrementar su valor.
--> SET @A = 0; 
CALL inc_valor(@A,1); -- @A ahora vale 0+1 = 1
CALL inc_valor(@A,4); -- @A ahora vale 1+4 = 5
CALL inc_valor(@A,9); -- @A ahora vale 5+9 = 14
SELECT @A; <-- |
+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
1 row in set (0.00 sec)

ej_proc mysql>
ej_proc mysql>set @A = 0; 
Query OK, 0 rows affected (0.00 sec)

ej_proc mysql>call inc_valor(@A,1);
Query OK, 0 rows affected (0.00 sec)

ej_proc mysql>call inc_valor(@A,4);
Query OK, 0 rows affected (0.00 sec)

ej_proc mysql>call inc_valor(@A,9);
Query OK, 0 rows affected (0.00 sec)

ej_proc mysql>select @A;
+------+
| @A   |
+------+
|   14 |
+------+
1 row in set (0.00 sec)

ej_proc mysql>
ej_proc mysql>set @A = 5; 
Query OK, 0 rows affected (0.00 sec)

ej_proc mysql>call inc_valor(@A,1);
Query OK, 0 rows affected (0.00 sec)

ej_proc mysql>call inc_valor(@A,4);
Query OK, 0 rows affected (0.00 sec)

ej_proc mysql>call inc_valor(@A,9);
Query OK, 0 rows affected (0.00 sec)

ej_proc mysql>select @A;
+------+
| @A   |
+------+
|   19 |
+------+
1 row in set (0.00 sec)

ej_proc mysql>
ej_proc mysql>-- Consulta las variables creadas
ej_proc mysql>select 'Para consultar las variables creadas: 
    '> --> select * from performance_schema.user_variables_by_thread; <--' as CONSULTA;
+-----------------------------------------------------------------------------------------------------------+
| CONSULTA                                                                                                  |
+-----------------------------------------------------------------------------------------------------------+
| Para consultar las variables creadas: 
--> select * from performance_schema.user_variables_by_thread; <-- |
+-----------------------------------------------------------------------------------------------------------+
1 row in set (0.00 sec)

ej_proc mysql>
ej_proc mysql>select * from performance_schema.user_variables_by_thread;
+-----------+---------------+--------------------------------+
| THREAD_ID | VARIABLE_NAME | VARIABLE_VALUE                 |
+-----------+---------------+--------------------------------+
|        95 | max_pob       |          |
|        95 | A             |                          |
+-----------+---------------+--------------------------------+
2 rows in set (0.00 sec)

ej_proc mysql>
ej_proc mysql>
ej_proc mysql>-- Ejercicio 04
ej_proc mysql>use ej_proc
Database changed
ej_proc mysql>select * from ej_proc where id = 4;
+----+------------------------------------------------------------------------------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| id | ejercicio                                                                                                        | consulta                                                                                                                                                                                                                                                              |
+----+------------------------------------------------------------------------------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
|  4 | Crear un proc en la base MUNDO para saber si un pais es grande o no; (GRANDE si tiene mas de 100 M de habitantes | DELIMITER $$
CREATE PROCEDURE pais_g(IN n VARCHAR(50))
BEGIN
DECLARE pob INT;
SELECT poblacion into pob from paises where pais = n;
IF pob > 100000000 THEN SELECT concat(n,' es GRANDE') as RESPUESTA;
ELSE SELECT concat(n,' es PEQUE');
END IF;
END $$
DELIMITER ; |
+----+------------------------------------------------------------------------------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
1 row in set (0.00 sec)

ej_proc mysql>use mundo
Database changed
mundo mysql>drop procedure if exists pais_g;
Query OK, 0 rows affected (0.01 sec)

mundo mysql>delimiter $$
mundo mysql>create procedure pais_g(in n varchar(50))
    -> begin
    -> declare pob int;
    -> select poblacion into pob from paises where pais = n;
    -> if pob > 100000000 then select concat(n,' es GRANDE') as RESPUESTA;
    -> else select concat(n,' es peque');
    -> end if;
    -> end $$
Query OK, 0 rows affected (0.01 sec)

mundo mysql>delimiter ;
mundo mysql>
mundo mysql>select "Provamos el procedimiento...
    "> --> CALL pais_g('Mexico');
    "> CALL pais_g('France'); <--" as CONSULTA;
+------------------------------------------------------------------------------------+
| CONSULTA                                                                           |
+------------------------------------------------------------------------------------+
| Provamos el procedimiento...
--> CALL pais_g('Mexico');
CALL pais_g('France'); <-- |
+------------------------------------------------------------------------------------+
1 row in set (0.00 sec)

mundo mysql>
mundo mysql>CALL pais_g('Mexico');
+------------------+
| RESPUESTA        |
+------------------+
| Mexico es GRANDE |
+------------------+
1 row in set (0.00 sec)

Query OK, 0 rows affected (0.00 sec)

mundo mysql>CALL pais_g('France');
+-----------------------+
| concat(n,' es peque') |
+-----------------------+
| France es peque       |
+-----------------------+
1 row in set (0.00 sec)

Query OK, 0 rows affected (0.00 sec)

mundo mysql>
mundo mysql>
mundo mysql>
mundo mysql>-- Ejercicio 05
mundo mysql>use ej_proc
Database changed
ej_proc mysql>select * from ej_proc where id = 5;
+----+-------------------------------------------------------------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| id | ejercicio                                                                                       | consulta                                                                                                                                                                                                                                |
+----+-------------------------------------------------------------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
|  5 | Crear un proc en la base MUNDO que nos devuelva el costo por envio dado un pais que ingresemos. | DELIMITER $$
CREATE PROCEDURE envio(IN n VARCHAR(50),OUT e VARCHAR(50))
BEGIN
CASE
WHEN n = 'Mexico' THEN SET e = 'Gratis';
WHEN n = 'EEUU' THEN SET e = '$200.00 MXN';
ELSE SET e = 'No lo puedes pagar';
END CASE;
END $$
DELIMITER ; |
+----+-------------------------------------------------------------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
1 row in set (0.00 sec)

ej_proc mysql>use mundo
Database changed
mundo mysql>drop procedure if exists envio;
Query OK, 0 rows affected (0.01 sec)

mundo mysql>delimiter $$
mundo mysql>create procedure envio(in n varchar(50),out e varchar(50))
    -> begin
    -> case
    -> when n = 'Mexico' then set e = 'Gratis';
    -> when n = 'EEUU' then set e = '$200.00 MXN';
    -> else set e = 'No está disponible';
    -> end case;
    -> end $$
Query OK, 0 rows affected (0.01 sec)

mundo mysql>delimiter ;
mundo mysql>
mundo mysql>select "Proveemos...
    "> --> CALL envio('Mexico',@envio);
    "> SELECT @envio;
    "> CALL envio('EEUU',@envio);
    "> SELECT @envio;
    "> CALL envio('Mi casa',@envio);
    "> SELECT @envio; <--" as CONSULTA;
+---------------------------------------------------------------------------------------------------------------------------------------------------------+
| CONSULTA                                                                                                                                                |
+---------------------------------------------------------------------------------------------------------------------------------------------------------+
| Proveemos...
--> CALL envio('Mexico',@envio);
SELECT @envio;
CALL envio('EEUU',@envio);
SELECT @envio;
CALL envio('Mi casa',@envio);
SELECT @envio; <-- |
+---------------------------------------------------------------------------------------------------------------------------------------------------------+
1 row in set (0.00 sec)

mundo mysql>
mundo mysql>call envio('Mexico',@envio);
Query OK, 0 rows affected (0.00 sec)

mundo mysql>select @envio;
+--------+
| @envio |
+--------+
| Gratis |
+--------+
1 row in set (0.00 sec)

mundo mysql>call envio('EEUU',@envio);
Query OK, 0 rows affected (0.00 sec)

mundo mysql>select @envio;
+-------------+
| @envio      |
+-------------+
| $200.00 MXN |
+-------------+
1 row in set (0.00 sec)

mundo mysql>call envio('Mi casa',@envio);
Query OK, 0 rows affected (0.00 sec)

mundo mysql>select @envio; 
+---------------------+
| @envio              |
+---------------------+
| No está disponible  |
+---------------------+
1 row in set (0.00 sec)

mundo mysql>
mundo mysql>
mundo mysql>
mundo mysql>
mundo mysql>-- Ejercicio 06
mundo mysql>use ej_proc
Database changed
ej_proc mysql>select * from ej_proc where id = 6;
+----+-------------------------------------------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| id | ejercicio                                                                     | consulta                                                                                                                                                                                                                                                                                                                                                                                       |
+----+-------------------------------------------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
|  6 | Crear un proc que imprima los numeros pares hasta el indicado por el usuario. | DELIMITER $$
CREATE PROCEDURE pares_hasta(IN n INT)
BEGIN
DECLARE res VARCHAR(500);
DECLARE contador INT;
SET res = '';
SET contador = 1;
nombre_loop: LOOP
IF contador >= n THEN LEAVE nombre_loop;
END IF;
SET contador = contador + 1;
IF (contador mod 2) THEN ITERATE nombre_loop;
ELSE SET res = concat(res,contador,',');
END IF;
END LOOP;
SELECT res as RESULTADO;
END $$
DELIMITER ; |
+----+-------------------------------------------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
1 row in set (0.00 sec)

ej_proc mysql>drop procedure if exists pares_hasta;
Query OK, 0 rows affected, 1 warning (0.00 sec)

ej_proc mysql>delimiter $$
ej_proc mysql>create procedure pares_hasta(in n int)
    -> begin
    -> declare res varchar(500);
    -> declare contador int;
    -> set res = '';
    -> set contador = 1;
    -> nombre_loop: loop
    -> if contador >= n then leave nombre_loop;
    -> end if;
    -> set contador = contador + 1;
    -> if (contador mod 2) then iterate nombre_loop;
    -> else set res = concat(res,contador,',');
    -> end if;
    -> end loop;
    -> select res as resultado;
    -> end $$
Query OK, 0 rows affected (0.01 sec)

ej_proc mysql>DELIMITER ;
ej_proc mysql>
ej_proc mysql>select 'Proveemos...
    '> --> CALL pares_hasta(10);
    '> CALL pares_hasta(21); <--' as CONSULTA;
+------------------------------------------------------------------+
| CONSULTA                                                         |
+------------------------------------------------------------------+
| Proveemos...
--> CALL pares_hasta(10);
CALL pares_hasta(21); <-- |
+------------------------------------------------------------------+
1 row in set (0.00 sec)

ej_proc mysql>
ej_proc mysql>call pares_hasta(10);
+-------------+
| resultado   |
+-------------+
| 2,4,6,8,10, |
+-------------+
1 row in set (0.00 sec)

Query OK, 0 rows affected (0.00 sec)

ej_proc mysql>call pares_hasta(21);
+----------------------------+
| resultado                  |
+----------------------------+
| 2,4,6,8,10,12,14,16,18,20, |
+----------------------------+
1 row in set (0.00 sec)

Query OK, 0 rows affected (0.00 sec)

ej_proc mysql>
ej_proc mysql>
ej_proc mysql>-- Ejercicio 07
ej_proc mysql>use ej_proc
Database changed
ej_proc mysql>select * from ej_proc where id = 7;
+----+------------------------------------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| id | ejercicio                                                        | consulta                                                                                                                                                                                                                                                                                        |
+----+------------------------------------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
|  7 | Crear un procedimiento que inserte n numeros en la tabla prueba. | CREATE TABLE prueba(id INT);
DROP PROCEDURE IF EXISTS llena_hasta;
DELIMITER $$
CREATE PROCEDURE llena_hasta(IN n INT)
BEGIN
DECLARE contador INT;
SET contador = 1;
REPEAT
INSERT INTO prueba VALUES(contador);
SET contador = contador + 1;
UNTIL contador > n
END REPEAT;
END $$
DELIMITER ; |
+----+------------------------------------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
1 row in set (0.00 sec)

ej_proc mysql>drop table if exists prueba;
Query OK, 0 rows affected, 1 warning (0.00 sec)

ej_proc mysql>create table prueba(id int);
Query OK, 0 rows affected (0.03 sec)

ej_proc mysql>drop procedure if exists llena_hasta;
Query OK, 0 rows affected, 1 warning (0.00 sec)

ej_proc mysql>delimiter $$
ej_proc mysql>create procedure llena_hasta(in n int)
    -> begin
    -> declare contador int;
    -> set contador = 1;
    -> repeat
    -> insert into prueba values(contador);
    -> set contador = contador + 1;
    -> until contador > n
    -> end repeat;
    -> end $$
Query OK, 0 rows affected (0.01 sec)

ej_proc mysql>delimiter ;
ej_proc mysql>
ej_proc mysql>select 'Proveemos...
    '> --> CALL llena_hasta(5);
    '> CALL llena_hasta(7); 
    '> SELECT * FROM prueba;<--' as CONSULTA;
+--------------------------------------------------------------------------------------+
| CONSULTA                                                                             |
+--------------------------------------------------------------------------------------+
| Proveemos...
--> CALL llena_hasta(5);
CALL llena_hasta(7); 
SELECT * FROM prueba;<-- |
+--------------------------------------------------------------------------------------+
1 row in set (0.00 sec)

ej_proc mysql>
ej_proc mysql>call llena_hasta(5);
Query OK, 1 row affected (0.03 sec)

ej_proc mysql>call llena_hasta(7);
Query OK, 1 row affected (0.05 sec)

ej_proc mysql>select * from prueba;
+------+
| id   |
+------+
|    1 |
|    2 |
|    3 |
|    4 |
|    5 |
|    1 |
|    2 |
|    3 |
|    4 |
|    5 |
|    6 |
|    7 |
+------+
12 rows in set (0.00 sec)

ej_proc mysql>notee
