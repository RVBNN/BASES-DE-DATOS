mysql> /* Cambiamos el prompt  */
mysql> prompt [\d]->
PROMPT set to '[\d]->'
[(none)]->
[(none)]->/* Ejercicio 1 - base bank */
[(none)]->use bank
Database changed
[bank]->show tables;
+-----------------+
| Tables_in_bank  |
+-----------------+
| acc_transaction |
| account         |
| branch          |
| business        |
| customer        |
| department      |
| employee        |
| individual      |
| officer         |
| product         |
| product_type    |
+-----------------+
11 rows in set (0.02 sec)

[bank]->
[bank]->-- 1
[bank]->select * from product limit 5;
+------------+--------------+--------------+-------------------------+-----------------+
| PRODUCT_CD | DATE_OFFERED | DATE_RETIRED | NAME                    | PRODUCT_TYPE_CD |
+------------+--------------+--------------+-------------------------+-----------------+
| AUT        | 2000-01-01   | NULL         | auto loan               | LOAN            |
| BUS        | 2000-01-01   | NULL         | business line of credit | LOAN            |
| CD         | 2000-01-01   | NULL         | certificate of deposit  | ACCOUNT         |
| CHK        | 2000-01-01   | NULL         | checking account        | ACCOUNT         |
| MM         | 2000-01-01   | NULL         | money market account    | ACCOUNT         |
+------------+--------------+--------------+-------------------------+-----------------+
5 rows in set (0.00 sec)

[bank]->desc product;
+-----------------+--------------+------+-----+---------+-------+
| Field           | Type         | Null | Key | Default | Extra |
+-----------------+--------------+------+-----+---------+-------+
| PRODUCT_CD      | varchar(10)  | NO   | PRI | NULL    |       |
| DATE_OFFERED    | date         | YES  |     | NULL    |       |
| DATE_RETIRED    | date         | YES  |     | NULL    |       |
| NAME            | varchar(50)  | NO   |     | NULL    |       |
| PRODUCT_TYPE_CD | varchar(255) | YES  | MUL | NULL    |       |
+-----------------+--------------+------+-----+---------+-------+
5 rows in set (0.01 sec)

[bank]->desc product_type;
+-----------------+--------------+------+-----+---------+-------+
| Field           | Type         | Null | Key | Default | Extra |
+-----------------+--------------+------+-----+---------+-------+
| PRODUCT_TYPE_CD | varchar(255) | NO   | PRI | NULL    |       |
| NAME            | varchar(50)  | YES  |     | NULL    |       |
+-----------------+--------------+------+-----+---------+-------+
2 rows in set (0.00 sec)

[bank]->select * from product_type limit 5;
+-----------------+-------------------------------+
| PRODUCT_TYPE_CD | NAME                          |
+-----------------+-------------------------------+
| ACCOUNT         | Customer Accounts             |
| INSURANCE       | Insurance Offerings           |
| LOAN            | Individual and Business Loans |
+-----------------+-------------------------------+
3 rows in set (0.00 sec)

[bank]->
[bank]->select product_cd as codigo,
    ->  name as producto, 
    ->  product_type_cd as tipo_producto
    ->  from product;
+--------+-------------------------+---------------+
| codigo | producto                | tipo_producto |
+--------+-------------------------+---------------+
| AUT    | auto loan               | LOAN          |
| BUS    | business line of credit | LOAN          |
| CD     | certificate of deposit  | ACCOUNT       |
| CHK    | checking account        | ACCOUNT       |
| MM     | money market account    | ACCOUNT       |
| MRT    | home mortgage           | LOAN          |
| SAV    | savings account         | ACCOUNT       |
| SBL    | small business loan     | LOAN          |
+--------+-------------------------+---------------+
8 rows in set (0.00 sec)

[bank]-> 
[bank]->select * from product inner join product_type on product.product_type_cd = product_type.product_type_cd;
+------------+--------------+--------------+-------------------------+-----------------+-----------------+-------------------------------+
| PRODUCT_CD | DATE_OFFERED | DATE_RETIRED | NAME                    | PRODUCT_TYPE_CD | PRODUCT_TYPE_CD | NAME                          |
+------------+--------------+--------------+-------------------------+-----------------+-----------------+-------------------------------+
| AUT        | 2000-01-01   | NULL         | auto loan               | LOAN            | LOAN            | Individual and Business Loans |
| BUS        | 2000-01-01   | NULL         | business line of credit | LOAN            | LOAN            | Individual and Business Loans |
| CD         | 2000-01-01   | NULL         | certificate of deposit  | ACCOUNT         | ACCOUNT         | Customer Accounts             |
| CHK        | 2000-01-01   | NULL         | checking account        | ACCOUNT         | ACCOUNT         | Customer Accounts             |
| MM         | 2000-01-01   | NULL         | money market account    | ACCOUNT         | ACCOUNT         | Customer Accounts             |
| MRT        | 2000-01-01   | NULL         | home mortgage           | LOAN            | LOAN            | Individual and Business Loans |
| SAV        | 2000-01-01   | NULL         | savings account         | ACCOUNT         | ACCOUNT         | Customer Accounts             |
| SBL        | 2000-01-01   | NULL         | small business loan     | LOAN            | LOAN            | Individual and Business Loans |
+------------+--------------+--------------+-------------------------+-----------------+-----------------+-------------------------------+
8 rows in set (0.00 sec)

[bank]->
[bank]->select count(column_name) as num_columnas, table_name as tabla
    ->  from information_schema.columns 
    ->  where table_name in ('product', 'product_type')
    ->  and table_schema=database()
    ->  group by table_name with rollup;
+--------------+--------------+
| num_columnas | tabla        |
+--------------+--------------+
|            5 | product      |
|            2 | product_type |
|            7 | NULL         |
+--------------+--------------+
3 rows in set (0.00 sec)

[bank]-> 
[bank]-> 
[bank]->select * from product inner join product_type using (product_type_cd);
+-----------------+------------+--------------+--------------+-------------------------+-------------------------------+
| PRODUCT_TYPE_CD | PRODUCT_CD | DATE_OFFERED | DATE_RETIRED | NAME                    | NAME                          |
+-----------------+------------+--------------+--------------+-------------------------+-------------------------------+
| LOAN            | AUT        | 2000-01-01   | NULL         | auto loan               | Individual and Business Loans |
| LOAN            | BUS        | 2000-01-01   | NULL         | business line of credit | Individual and Business Loans |
| ACCOUNT         | CD         | 2000-01-01   | NULL         | certificate of deposit  | Customer Accounts             |
| ACCOUNT         | CHK        | 2000-01-01   | NULL         | checking account        | Customer Accounts             |
| ACCOUNT         | MM         | 2000-01-01   | NULL         | money market account    | Customer Accounts             |
| LOAN            | MRT        | 2000-01-01   | NULL         | home mortgage           | Individual and Business Loans |
| ACCOUNT         | SAV        | 2000-01-01   | NULL         | savings account         | Customer Accounts             |
| LOAN            | SBL        | 2000-01-01   | NULL         | small business loan     | Individual and Business Loans |
+-----------------+------------+--------------+--------------+-------------------------+-------------------------------+
8 rows in set (0.00 sec)

[bank]-> 
[bank]-> select product_cd as codigo,
    ->  name as producto, 
    ->  product_type_cd as tipo_producto
    ->  from product;
+--------+-------------------------+---------------+
| codigo | producto                | tipo_producto |
+--------+-------------------------+---------------+
| AUT    | auto loan               | LOAN          |
| BUS    | business line of credit | LOAN          |
| CD     | certificate of deposit  | ACCOUNT       |
| CHK    | checking account        | ACCOUNT       |
| MM     | money market account    | ACCOUNT       |
| MRT    | home mortgage           | LOAN          |
| SAV    | savings account         | ACCOUNT       |
| SBL    | small business loan     | LOAN          |
+--------+-------------------------+---------------+
8 rows in set (0.00 sec)

[bank]-> 
[bank]->select product_cd as codigo,
    ->  product.name as producto, 
    ->  product_type.name as tipo_producto
    ->  from product inner join product_type using (product_type_cd);
+--------+-------------------------+-------------------------------+
| codigo | producto                | tipo_producto                 |
+--------+-------------------------+-------------------------------+
| AUT    | auto loan               | Individual and Business Loans |
| BUS    | business line of credit | Individual and Business Loans |
| CD     | certificate of deposit  | Customer Accounts             |
| CHK    | checking account        | Customer Accounts             |
| MM     | money market account    | Customer Accounts             |
| MRT    | home mortgage           | Individual and Business Loans |
| SAV    | savings account         | Customer Accounts             |
| SBL    | small business loan     | Individual and Business Loans |
+--------+-------------------------+-------------------------------+
8 rows in set (0.00 sec)

[bank]->
[bank]->-- 2
[bank]->select product_cd as codigo,
    ->  product.name as producto, 
    ->  product_type.name as tipo_producto
    ->  from product inner join product_type using (product_type_cd)
    ->  where product_cd like 'M%';
+--------+----------------------+-------------------------------+
| codigo | producto             | tipo_producto                 |
+--------+----------------------+-------------------------------+
| MM     | money market account | Customer Accounts             |
| MRT    | home mortgage        | Individual and Business Loans |
+--------+----------------------+-------------------------------+
2 rows in set (0.00 sec)

[bank]->
[bank]->
[bank]->-- 3
[bank]->select txn_date,city,format(avail_balance,2)
    -> from acc_transaction
    -> inner join account using (account_id)
    -> inner join customer using (cust_id)
    -> where city = 'Salem'
    -> or avail_balance > 5000;
+---------------------+---------+-------------------------+
| txn_date            | city    | format(avail_balance,2) |
+---------------------+---------+-------------------------+
| 2004-09-30 00:00:00 | Waltham | 5,487.09                |
| 2004-01-27 00:00:00 | Salem   | 2,237.97                |
| 2004-12-28 00:00:00 | Waltham | 10,000.00               |
| 2001-05-23 00:00:00 | Salem   | 3,487.19                |
| 2001-05-23 00:00:00 | Salem   | 387.99                  |
| 2004-10-28 00:00:00 | Newton  | 9,345.55                |
| 2002-09-30 00:00:00 | Salem   | 23,575.12               |
| 2003-07-30 00:00:00 | Salem   | 38,552.05               |
+---------------------+---------+-------------------------+
8 rows in set (0.00 sec)

[bank]->
[bank]->-- 4 
[bank]->select txn_date,city,format(avail_balance,2)
    -> from acc_transaction
    -> natural join account
    -> natural join customer
    -> where city = 'Salem'
    -> or avail_balance > 5000;
+---------------------+---------+-------------------------+
| txn_date            | city    | format(avail_balance,2) |
+---------------------+---------+-------------------------+
| 2004-09-30 00:00:00 | Waltham | 5,487.09                |
| 2004-01-27 00:00:00 | Salem   | 2,237.97                |
| 2004-12-28 00:00:00 | Waltham | 10,000.00               |
| 2001-05-23 00:00:00 | Salem   | 3,487.19                |
| 2001-05-23 00:00:00 | Salem   | 387.99                  |
| 2004-10-28 00:00:00 | Newton  | 9,345.55                |
| 2002-09-30 00:00:00 | Salem   | 23,575.12               |
| 2003-07-30 00:00:00 | Salem   | 38,552.05               |
+---------------------+---------+-------------------------+
8 rows in set (0.00 sec)

[bank]->
[bank]->-- 5
[bank]->select max(txn_date) from acc_transaction;
+---------------------+
| max(txn_date)       |
+---------------------+
| 2004-12-28 00:00:00 |
+---------------------+
1 row in set (0.00 sec)

[bank]->
[bank]->select txn_date,city,format(avail_balance,2),
    -> (select max(txn_date) from acc_transaction)
    -> from acc_transaction
    -> natural join account
    -> natural join customer
    -> where city = 'Salem'
    -> or avail_balance > 5000;
+---------------------+---------+-------------------------+---------------------------------------------+
| txn_date            | city    | format(avail_balance,2) | (select max(txn_date) from acc_transaction) |
+---------------------+---------+-------------------------+---------------------------------------------+
| 2004-09-30 00:00:00 | Waltham | 5,487.09                | 2004-12-28 00:00:00                         |
| 2004-01-27 00:00:00 | Salem   | 2,237.97                | 2004-12-28 00:00:00                         |
| 2004-12-28 00:00:00 | Waltham | 10,000.00               | 2004-12-28 00:00:00                         |
| 2001-05-23 00:00:00 | Salem   | 3,487.19                | 2004-12-28 00:00:00                         |
| 2001-05-23 00:00:00 | Salem   | 387.99                  | 2004-12-28 00:00:00                         |
| 2004-10-28 00:00:00 | Newton  | 9,345.55                | 2004-12-28 00:00:00                         |
| 2002-09-30 00:00:00 | Salem   | 23,575.12               | 2004-12-28 00:00:00                         |
| 2003-07-30 00:00:00 | Salem   | 38,552.05               | 2004-12-28 00:00:00                         |
+---------------------+---------+-------------------------+---------------------------------------------+
8 rows in set (0.00 sec)

[bank]->
[bank]->select txn_date 'fecha',city 'ciudad',
    -> format(avail_balance,2) 'saldo',
    -> (select max(txn_date) from acc_transaction) 'max fecha',
    -> datediff((select max(txn_date) from acc_transaction),txn_date) as 'dias'
    -> from acc_transaction
    -> natural join account
    -> natural join customer
    -> where city = 'Salem'
    -> or avail_balance > 5000;
+---------------------+---------+-----------+---------------------+------+
| fecha               | ciudad  | saldo     | max fecha           | dias |
+---------------------+---------+-----------+---------------------+------+
| 2004-09-30 00:00:00 | Waltham | 5,487.09  | 2004-12-28 00:00:00 |   89 |
| 2004-01-27 00:00:00 | Salem   | 2,237.97  | 2004-12-28 00:00:00 |  336 |
| 2004-12-28 00:00:00 | Waltham | 10,000.00 | 2004-12-28 00:00:00 |    0 |
| 2001-05-23 00:00:00 | Salem   | 3,487.19  | 2004-12-28 00:00:00 | 1315 |
| 2001-05-23 00:00:00 | Salem   | 387.99    | 2004-12-28 00:00:00 | 1315 |
| 2004-10-28 00:00:00 | Newton  | 9,345.55  | 2004-12-28 00:00:00 |   61 |
| 2002-09-30 00:00:00 | Salem   | 23,575.12 | 2004-12-28 00:00:00 |  820 |
| 2003-07-30 00:00:00 | Salem   | 38,552.05 | 2004-12-28 00:00:00 |  517 |
+---------------------+---------+-----------+---------------------+------+
8 rows in set (0.00 sec)

[bank]->
[bank]->select date(txn_date) 'fecha',city 'ciudad',
    -> format(avail_balance,2) 'saldo',
    -> (select date(max(txn_date)) from acc_transaction) 'max fecha',
    -> datediff((select max(txn_date) from acc_transaction),txn_date) as 'dias'
    -> from acc_transaction
    -> natural join account
    -> natural join customer
    -> where city = 'Salem'
    -> or avail_balance > 5000
    -> order by 5 asc;
+------------+---------+-----------+------------+------+
| fecha      | ciudad  | saldo     | max fecha  | dias |
+------------+---------+-----------+------------+------+
| 2004-12-28 | Waltham | 10,000.00 | 2004-12-28 |    0 |
| 2004-10-28 | Newton  | 9,345.55  | 2004-12-28 |   61 |
| 2004-09-30 | Waltham | 5,487.09  | 2004-12-28 |   89 |
| 2004-01-27 | Salem   | 2,237.97  | 2004-12-28 |  336 |
| 2003-07-30 | Salem   | 38,552.05 | 2004-12-28 |  517 |
| 2002-09-30 | Salem   | 23,575.12 | 2004-12-28 |  820 |
| 2001-05-23 | Salem   | 3,487.19  | 2004-12-28 | 1315 |
| 2001-05-23 | Salem   | 387.99    | 2004-12-28 | 1315 |
+------------+---------+-----------+------------+------+
8 rows in set (0.00 sec)

[bank]->
[bank]->select date(txn_date) 'fecha',city 'ciudad',
    -> format(avail_balance,2) 'saldo',
    -> datediff((select max(txn_date) from acc_transaction),txn_date) as 'dias'
    -> from acc_transaction
    -> natural join account
    -> natural join customer
    -> where city = 'Salem'
    -> or avail_balance > 5000
    -> order by 4 asc;
+------------+---------+-----------+------+
| fecha      | ciudad  | saldo     | dias |
+------------+---------+-----------+------+
| 2004-12-28 | Waltham | 10,000.00 |    0 |
| 2004-10-28 | Newton  | 9,345.55  |   61 |
| 2004-09-30 | Waltham | 5,487.09  |   89 |
| 2004-01-27 | Salem   | 2,237.97  |  336 |
| 2003-07-30 | Salem   | 38,552.05 |  517 |
| 2002-09-30 | Salem   | 23,575.12 |  820 |
| 2001-05-23 | Salem   | 3,487.19  | 1315 |
| 2001-05-23 | Salem   | 387.99    | 1315 |
+------------+---------+-----------+------+
8 rows in set (0.00 sec)

[bank]->
[bank]->-- 6
[bank]->select * from business;
+-------------+------------------------+------------+---------+
| INCORP_DATE | NAME                   | STATE_ID   | CUST_ID |
+-------------+------------------------+------------+---------+
| 1995-05-01  | Chilton Engineering    | 12-345-678 |      10 |
| 2001-01-01  | Northeast Cooling Inc. | 23-456-789 |      11 |
| 2002-06-30  | Superior Auto Body     | 34-567-890 |      12 |
| 1999-05-01  | AAA Insurance Inc.     | 45-678-901 |      13 |
+-------------+------------------------+------------+---------+
4 rows in set (0.00 sec)

[bank]->
[bank]->select * from account where cust_id in (10,11,12,13);
+------------+---------------+------------+--------------------+------------+-----------------+--------+---------+----------------+-------------+------------+
| ACCOUNT_ID | AVAIL_BALANCE | CLOSE_DATE | LAST_ACTIVITY_DATE | OPEN_DATE  | PENDING_BALANCE | STATUS | CUST_ID | OPEN_BRANCH_ID | OPEN_EMP_ID | PRODUCT_CD |
+------------+---------------+------------+--------------------+------------+-----------------+--------+---------+----------------+-------------+------------+
|         24 |       23575.1 | NULL       | 2004-12-15         | 2002-09-30 |         23575.1 | ACTIVE |      10 |              4 |          16 | CHK        |
|         25 |             0 | NULL       | 2004-08-28         | 2002-10-01 |               0 | ACTIVE |      10 |              4 |          16 | BUS        |
|         27 |       9345.55 | NULL       | 2004-11-14         | 2004-03-22 |         9345.55 | ACTIVE |      11 |              2 |          10 | BUS        |
|         28 |       38552.1 | NULL       | 2004-12-15         | 2003-07-30 |         38552.1 | ACTIVE |      12 |              4 |          16 | CHK        |
|         29 |         50000 | NULL       | 2004-12-17         | 2004-02-22 |           50000 | ACTIVE |      13 |              3 |          13 | SBL        |
+------------+---------------+------------+--------------------+------------+-----------------+--------+---------+----------------+-------------+------------+
5 rows in set (0.00 sec)

[bank]->
[bank]->select name, count(account_id) cuentas
    -> from business 
    -> inner join account using (cust_id)
    -> group by 1;
+------------------------+---------+
| name                   | cuentas |
+------------------------+---------+
| Chilton Engineering    |       2 |
| Northeast Cooling Inc. |       1 |
| Superior Auto Body     |       1 |
| AAA Insurance Inc.     |       1 |
+------------------------+---------+
4 rows in set (0.00 sec)

[bank]->
[bank]->
[bank]->select b.name as 'Empresa', count(account_id) 'Num cuentas', city 'Ciudad apertura', 
    -> concat_ws(' ',e.first_name,e.last_name) 'Empleado encargado' 
    -> from business b 
    -> inner join account a using (cust_id) 
    -> inner join employee e on a.open_emp_id = e.emp_id 
    -> inner join branch br on a.open_branch_id = br.branch_id 
    -> group by 1,3,4
    -> having count(account_id) = (select min(cuentas)
    -> FROM 
    -> (
    -> select name, count(account_id) cuentas
    -> from business 
    -> inner join account using (cust_id)
    -> group by 1
    -> ) sub);
+------------------------+-------------+-----------------+--------------------+
| Empresa                | Num cuentas | Ciudad apertura | Empleado encargado |
+------------------------+-------------+-----------------+--------------------+
| Northeast Cooling Inc. |           1 | Woburn          | Paula Roberts      |
| Superior Auto Body     |           1 | Salem           | Theresa Markham    |
| AAA Insurance Inc.     |           1 | Quincy          | John Blake         |
+------------------------+-------------+-----------------+--------------------+
3 rows in set (0.00 sec)

[bank]->notee
